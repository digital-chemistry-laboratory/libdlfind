name: Python test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.os }} / ${{ matrix.python_version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        python_version: ["3.8", "3.9", "3.10"]
        include:
          - os: ubuntu
            cc: gcc-10
            cxx: g++-10
            fc: gfortran-10
          - os: macos
            cc: gcc-11
            cxx: g++-11
            fc: gfortran-11
          - os: windows
            cc: cl
            cxx: cl
            fc: gfortran
        exclude:
          - os: macos
            python_version: "3.8"
          - os: macos
            python_version: "3.9"
          - os: windows
            python_version: "3.8"
          - os: windows
            python_version: "3.9"

    steps:
      - uses: actions/checkout@v3
      - name: Install Python ${{ matrix.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}      
      - name: Update GCC for Windows and download OpenBLAS
        if: contains(matrix.os, 'windows')
        run: |
          choco upgrade mingw
          choco install unzip -y
          choco install wget -y
          wget https://github.com/scipy/scipy-ci-artifacts/raw/main/openblas_32_if.zip
          unzip -d c:\ openblas_32_if.zip
          echo "PKG_CONFIG_PATH=c:\opt\openblas\if_32\64\lib\pkgconfig;" >> $env:GITHUB_ENV
      - name: Install OpenBLAS for Mac
        if: contains(matrix.os, 'macos')
        run: |
          brew install openblas
          echo "LDFLAGS=-L/usr/local/opt/openblas/lib" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/usr/local/opt/openblas/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV
      - name: Install OpenBLAS for Linux
        if: contains(matrix.os, 'ubuntu')
        run: sudo apt-get install libopenblas-dev
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade nox
      - name: Run Nox tests
        run: python -m nox -s tests-${{ matrix.python_version }} --verbose
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
          FC: ${{ matrix.fc }}
