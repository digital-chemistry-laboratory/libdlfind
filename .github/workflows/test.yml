name: Python test 

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.os }} / ${{ matrix.python_version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        python_version: ["3.8", "3.9", "3.10"]
        include:
          - os: ubuntu
            cc: gcc-10
            cxx: g++-10
            fc: gfortran-10
          - os: macos
            cc: gcc-11
            cxx: g++-11
            fc: gfortran-11
          - os: windows
            cc: cl
            cxx: cl
            fc: gfortran
        exclude:
          - os: macos
            python_version: "3.8"
          - os: macos
            python_version: "3.9"
          - os: windows
            python_version: "3.8"
          - os: windows
            python_version: "3.9"

    steps:
      - uses: actions/checkout@v3

      - name: Install Python ${{ matrix.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}      

      - name: Install RTools Windows # https://github.com/scipy/scipy/blob/main/.github/workflows/windows.yml
        if: contains(matrix.os, 'windows')
        run: |
          choco install rtools --no-progress
          echo "c:\rtools40\mingw64\bin;" >> $env:GITHUB_PATH
          echo "c:\rtools40\usr\bin;" >> $env:GITHUB_PATH

      - name: Install OpenBLAS for Windows
        if: contains(matrix.os, 'windows')
        run: |
          pacman -Sy
          pacman -S mingw-w64-x86_64-openblas --noconfirm
          echo "c:\rtools40\mingw64\lib;" >> $env:GITHUB_PATH

      - name: Install OpenBLAS for Linux
        if: contains(matrix.os, 'ubuntu')
        run: sudo apt-get install libopenblas-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade nox
          
      - name: Run Nox tests
        run: python -m nox -s tests-${{ matrix.python_version }} --verbose
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
          FC: ${{ matrix.fc }}
